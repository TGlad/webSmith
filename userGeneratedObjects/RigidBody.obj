saveChanges?description=This+is+a+general+case+rigid+object.+Depending+on+which+children+are+active%2C+it+may+have+a+collision+volume%2C+it+may+have+a+renderable+mesh+and+it+may+have+a+mass%2Finertia.&wikilink=&init=backOut.object+%3D+%7B%7D%3B%0D%0A%0D%0Aparameters.scene.addObject%28this%29%3B%0D%0AVelocity+in.targetVel+%3D+new+Vector3%280%2C0%2C0%29%3B%0D%0AAngularVelocity+in.targetAngularVel+%3D+new+Vector3%280%2C0%2C0%29%3B%0D%0AVelocity+topState.velocity+%3D+new+Vector3%280%2C0%2C0%29%3B%0D%0AAngularVelocity+topState.angularVelocity+%3D+new+Vector3%280%2C0%2C0%29%3B%0D%0AtopState.transform+%3D+new+Transform%28parameters.orientation%2C+parameters.position%29%3B%0D%0A%0D%0Aif+%28parameters.type+%3D%3D+%22box%22%29+%2F%2F+set+this+body+up+as+a+box%0D%0A%7B%0D%0A++%2F%2F+if+there+exists+a+stiffness+%3E+0+then+box+has+a+collidable+volume%0D%0A++if+%28parameters.stiffness%29+%0D%0A++%7B%0D%0A++++var+boxVolume+%3D+new+BoxVolume%28%29%3B%0D%0A++++g_addObject%28boxVolume%2C+%7B+extents%3A+parameters.extents+%7D%29%3B%0D%0A++++topState.volumeExtents+%3D+parameters.extents%3B%0D%0A++%7D%0D%0A++%0D%0A++%2F%2F+if+there+exists+a+texture+then+box+has+a+visible+volume%0D%0A++if+%28parameters.texture%29%0D%0A++%7B%0D%0A++++var+renderBox+%3D+new+RenderBox%28%29%3B%0D%0A++++g_addObject%28renderBox%2C+%7B+parent%3Athis%2C+extents%3A+parameters.extents%2C+texture%3A+parameters.texture+%7D%29%3B%0D%0A++++backOut.renderOBB+%3D+new+OBB%28%29%3B%0D%0A++%7D%0D%0A%0D%0A++%2F%2F+if+there+exists+a+density+%3E+0+then+box+has+a+mass%2Finertia%2C+and+is+subject+to+gravity.+%28Otherwise+it+is+kinematic%29%0D%0A++if+%28parameters.density%29%0D%0A++%7B%0D%0A++++var+inertia+%3D+new+Inertia%28%29%3B%0D%0A++++topState.hasInertia+%3D+true%3B%0D%0A++++g_addObject%28inertia%2C+%7Bparent%3Athis%2C+extents%3A+parameters.extents%2C+density%3A+parameters.density%7D%29%3B%0D%0A++%7D%0D%0A%7D%0D%0A%0D%0A&receive=for+%28key+in+in%29%0D%0A++down%5Bkey%5D+%3D+in%5Bkey%5D%3B%0D%0A%0D%0Adown.velocity+%3D+topState.velocity%3B%0D%0Adown.angularVelocity+%3D+topState.angularVelocity%3B&reply=if+%28up.deltaVel%29%0D%0A++topState.velocity+.%2B%3D+up.deltaVel%3B%0D%0Aif+%28up.deltaAngularVel%29%0D%0A++topState.angularVelocity+.%2B%3D+up.deltaAngularVel%3B%0D%0Aif+%28up.deltaPos%29%0D%0A++topState.transform.pos+.%2B%3D+up.deltaPos%3B%0D%0Aif+%28up.deltaAngle%29%0D%0A++topState.transform.quat+.*%3D+new+Quaternion%28up.deltaAngle%29%3B%0D%0Aif+%28up.transform%29+%2F%2F+if+a+target+transform+has+been+used+this+overrides+target+velocities%0D%0A++topState.transform.set%28up.transform%29%3B%0D%0A%0D%0AbackOut.object.transform+%3D+topState.transform%3B%0D%0AbackOut.object.draw+%3D+up.draw%3B%0D%0AbackOut.object.renderType+%3D+up.renderType%3B%0D%0A%0D%0Aif+%28topState.volumeExtents%29%0D%0A++backOut.volume+%3D+new+OBB%28topState.transform%2C+topState.volumeExtents%29%3B%0D%0A%0D%0Aif+%28backOut.renderOBB+and+up.renderExtents%29%0D%0A%7B%0D%0A++backOut.renderOBB.set%28topState.transform%2C+up.renderExtents%29%3B+%0D%0A%7D%0D%0A%0D%0AbackOut.velocity+%3D+topState.velocity%3B%0D%0AbackOut.angularVelocity+%3D+topState.angularVelocity%3B%0D%0AbackOut.inertiaTransform+%3D+topState.transform%3B%0D%0A%0D%0AbackOut.inverseMass+%3D+up.inverseMass%3B%0D%0AbackOut.inverseInertia+%3D+up.inverseInertia%3B&predict=%2F%2F+temporary+hack+to+only+update+if+there+is+no+inertia%0D%0Aif+%28not+topState.hasInertia%29%0D%0A%7B%0D%0A++up.transform+%3D+down.targetTransform%3B%0D%0A++up.deltaVel+%3D+down.targetVel+.-+down.velocity%3B%0D%0A++up.deltaAngularVel+%3D+down.targetAngularVel+.-+down.angularVelocity%3B%0D%0A++up.deltaPos+%3D+down.targetVel+.*+timeStep%3B%0D%0A++up.deltaAngle+%3D+down.targetAngularVel+.*+timeStep%3B%0D%0A%7D&react=&generate=&analyse=for+%28key+in+backIn%29%0D%0A++up%5Bkey%5D+%3D+backIn%5Bkey%5D%3B&save+as=RigidBody